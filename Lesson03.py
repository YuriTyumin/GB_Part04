# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

# delim = int(input(f'Введите делимое: '))
# delit = int(input(f'Введите делитель: '))
# while delit == 0:
#     delit = int(input(f'Вы ввели "{delit}" в качестве делителя, а так нельзя. Введите другое значение: '))
#
# def del_calc(delim, delit):
#     total = delim / delit
#     print(f'Результат деления {delim} на {delit} = {round(total, 3)}')
#
# del_calc(delim, delit)

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
# #позиционные параметры
# settings = ("John", "Doe", "1980", "Tokyo", "j.doe@john_doe.org", "12345678901")
# print((lambda *settings: settings)(settings))
# #именованные параметры
# def second_func(name, sur, year, city, email, ph):
#     print(f"{name}, {sur}, {year}, {city}, {email}, {ph}")
#
# second_func(sur='Doe', name='John',  year='1980', ph='12345678901', city='Tokyo', email='j.doe@john_doe.org')

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.
# def my_func(arg1, arg2, arg3):
#     numbers = [arg1, arg2, arg3]
#     numbers.sort()
#     print(f'Сумма 2х наибольших аргументов = {int(numbers[1]) + int(numbers[2])}')
#
# arg = []
# for n in range(3):
#     arg.insert(n, int(input(f'Введите {n+1} число: ')))
#
# my_func(arg[0], arg[1], arg[2])

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# ** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
#1.# def my_func(x, y):
#     print(f'Результат возведения числа {x} в степень {y}: {round(x ** y, 3)}')
#2.# def my_func(x, y):
#     tmp = x
#     for n in range(1, abs(y) + 1):
#         tmp = tmp * x
#     tmp = 1 / tmp
#     print(f'Результат возведения числа {x} в степень {y}: {tmp}')
#
# number = int(input(f'Введите два числа. Первое - это число, возводимое в степень: '))
# st = int(input(f'Второе число - это степень возведения: ')) * -1
# my_func(number, st)

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.





















#
#
#
# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func(text):
    if text.islower():
        #text = text.capitalize()
        text = text.title()
        print(f'Измененная строка: {text}')
    else:
        print(f'Вы ввели как минимум один символ не в нижнем регистре!')

tmp = input(f'Введите строку из слов в нижнем регистре, разделенных пробелом: ')
print(f'Исходная строка: {tmp}')
int_func(tmp)