# 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных свидетельствует пустая строка.
# with open("text.txt", "a+") as stream:
#     stream.write(input('Введите данные: '))
#     stream.write('\n')
#     stream.seek(0)
#     print(f'Ваши данные: \n{stream.read()}')
#
# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить подсчет количества строк,
# количества слов в каждой строке.
# with open("Lesson05.2.txt", encoding="utf-8") as stream:
#     tmp = stream.readlines()
#     counter = 1
#     for x in tmp:
#         if x != (("\n") or (" ")):
#             print(f'{counter} строка состоит из {x.count(" ") + 1} слов')
#             counter += 1
#         else:
#             print(f'Строка {counter} состоит только из неотображаемых символов и она пропускается')
#             counter += 1
#             continue
#
# 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
# Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
# Выполнить подсчет средней величины дохода сотрудников.
# Пример файла:
# Иванов 23543.12
# Петров 13749.32
# with open("Lesson05.3.txt", encoding="utf-8") as stream:
#     tmp = stream.readlines()
#     #print(tmp)
#     dictin = {}
#     summ = 0
#     for x in tmp:
#         lst = x.split()
#         dictin.update([lst])
#         if int(lst[1]) < 20000:
#             print(f'Сотрудник {lst[0]} имеет оклад менее 20тр')
#         summ = summ + int(lst[1])
#     #print(dictin)
#     print(f'Средняя величина доходов сотрудников = {summ // len(tmp)}')
#
# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.
# with open("Lesson05.4.txt") as stream:
#     tmp = stream.readlines()
#     #print(tmp)
#     enter = ['Один', 'Два', 'Три', 'Четыре', 'Пять']
#     dictin = {}
#     n = 0
#     for x in tmp:
#         lst = x.split('-')
#         #print(lst)
#         lst[0] = enter[n]
#         #lst.reverse()
#         dictin.update([lst])
#         n += 1
# #print(dictin)
# with open("Lesson05.4_1.txt", "w") as file:
#     for key, value in dictin.items():
#         print(key, value, sep=' -', end='', file=file)
#
# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
from random import randint

with open("Lesson05.5.txt", "w") as file:
    list_num = []
    numb = int(input(f'Введите кол-во элементов в исходном списке: '))
    for i in range(0, numb):
        list_num.insert(i, randint(0, randint(0, 100)))
    print(f'Исходный список: {list_num}')
    for i in list_num:
        print(i, file=file)

with open("Lesson05.5.txt") as stream:
    tmp = stream.readlines()
    #print(tmp)
    n = 0
    for i in range(0, len(tmp)):
        n = n + int(tmp[i])
    print(f'Сумма всех чисел в списке: {n}')




















#
#
#
# 6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных,
# практических и лабораторных занятий по этому предмету и их количество.
# Важно, чтобы для каждого предмета не обязательно были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.
# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
#
#
#
# 7. Создать вручную и заполнить несколькими строками текстовый файл,
# в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.
